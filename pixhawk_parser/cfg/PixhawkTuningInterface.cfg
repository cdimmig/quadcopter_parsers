#! /usr/bin/env python
# Create a cfg file for getting control parameters for dmoc optimal controller

PACKAGE = 'pixhawk_parser'

from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

#       Name                , Type     , Reconfiguration level , Description                                    , Default , Min   , Max
gen.add("kpr"               , double_t , 1                     , "Stab Roll/Pitch kP"                           , 4.5     , 3.0   , 7.0)
gen.add("kprr"              , double_t , 2                     , "Rate Roll/Pitch kP"                           , 0.08    , 0.08  , 0.3	)
gen.add("kirr"              , double_t , 3                     , "Rate Roll/Pitch kI"                           , 0.01    , 0.01  , 0.5	)
gen.add("kdrr"              , double_t , 4                     , "Rate Roll/Pitch kD"                           , 0.001   , 0.001 , 0.02	)
gen.add("kpy"               , double_t , 5                     , "Stab Yaw kP"                                  , 3.0     , 3.0   , 6.0	)
gen.add("kpyr"              , double_t , 6                     , "Rate Yaw kP"                                  , 0.15    , 0.15  , 0.5	)
gen.add("kiyr"              , double_t , 7                     , "Rate Yaw kI"                                  , 0.01    , 0.01  , 0.5	)
gen.add("kdyr"              , double_t , 8                     , "Rate Yaw kD"                                  , 0       , 0     , 0.02	)
gen.add("kpt"               , double_t , 9                     , "Throttle Acc Rate kP"                         , 0.5     , 0.5   , 1.5	)
gen.add("kit"               , double_t , 10                    , "Throttle Acc Rate kI"                         , 0       , 0     , 3.0)
gen.add("kdt"               , double_t , 11                    , "Throttle Acc Rate kD"                         , 0       , 0     , 0.4	)
gen.add("ekf_quat_noise"    , double_t , 15                    , "Quaternion Covariance"                        , 0.02    , 0.01  , 0.1	)
gen.add("feedforward"       , int_t    , 12                    , "Convert command to feedforward rate commands" , 1       , 0     , 1)
gen.add("prearmcheck"       , int_t    , 13                    , "Prearm Checks bitmask"                        , 0       , -128  , 128)
gen.add("use_compass"       , int_t    , 14                    , "Enable/Disable Compass"                       , 1       , 0     , 1)
gen.add("calibrate_pixhawk" , bool_t   , 0                     , "Prearm Calibrate Pixhawk"                     , False)
exit(gen.generate(PACKAGE , "Config" , "PixhawkTuningInterface"))




